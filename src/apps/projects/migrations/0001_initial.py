# Generated by Django 4.2.6 on 2023-10-29 06:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('documents', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='Заголовок')),
                ('broker_comission', models.PositiveIntegerField(default=20, verbose_name='Комиссия посредника (%)')),
                ('starting_from', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('deadline', models.DateField(blank=True, null=True, verbose_name='Дедлайн')),
                ('production', models.DateField(blank=True, null=True, verbose_name='Продакшн')),
                ('note', models.TextField(blank=True, verbose_name='Заметка')),
                ('archived', models.BooleanField(default=False, verbose_name='В архиве')),
                ('broker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Посредник')),
                ('policies', models.ManyToManyField(help_text='Политика проекта помогает понять на каких условиях готов работать заказчик и какие условия взамен готова предложить организация.<br/>', to='services.policy', verbose_name='Политики')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Создано')),
                ('updated', models.DateField(auto_now=True, verbose_name='Обновлено')),
                ('title', models.CharField(max_length=64, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Короткое описание')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.customer', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True, verbose_name='Создано')),
                ('updated', models.DateField(auto_now=True, verbose_name='Обновлено')),
                ('link', models.URLField(verbose_name='Ссылка на репозиторий')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Репозиторий',
                'verbose_name_plural': 'Репозитории',
            },
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('document_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='documents.document')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='projects.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Документ проекта',
                'verbose_name_plural': 'Документы проектов',
            },
            bases=('documents.document',),
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('hours', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во часов')),
                ('hour_rate', models.PositiveIntegerField(verbose_name='Ставка в час ($)')),
                ('technical_task', models.FileField(blank=True, upload_to='projects/period/technical_task/%Y/%m/%d/', verbose_name='Техническое задание')),
                ('executor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='projects.order', verbose_name='Заказ')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Период',
                'verbose_name_plural': 'Периоды',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project', verbose_name='Проект'),
        ),
    ]
